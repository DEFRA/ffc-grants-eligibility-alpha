@Library('defra-library@v-8') _

import uk.gov.defra.ffc.Provision

node {
  try {
    checkout scm

    stage('Run liquibase migrations') {
      repoName = utils.getRepoName()
      envVars = Provision.getMigrationEnvVars(this, params.environment, repoName, '')

      envVars.removeAll { it.startsWith('POSTGRES_SCHEMA_NAME') }
      envVars.removeAll { it.startsWith('POSTGRES_SCHEMA_USERNAME') }
      envVars.removeAll { it.startsWith('POSTGRES_SCHEMA_PASSWORD') }

      adminUser = envVars.find { it.startsWith('POSTGRES_ADMIN_USERNAME') }
      adminPwd = envVars.find { it.startsWith('POSTGRES_ADMIN_PASSWORD') }

      envVars.add('POSTGRES_SCHEMA_NAME=public')
      envVars.add("POSTGRES_SCHEMA_USERNAME=${adminUser.split('=')[1]}")
      envVars.add("POSTGRES_SCHEMA_PASSWORD=${adminPwd.split('=')[1]}")

      // envVars.each { echo "$it" }

      withEnv(envVars) {
        sh("docker-compose -p $repoName -f docker-compose.migrate.yaml run --no-deps database-up")
      }
    }

    // stage('Deploy Helm chart') {
    //   helm.deployRemoteChart(params.environment, params.namespace, params.chartName, params.chartVersion, params.helmChartRepoType)
    // }
  } catch(e) {
    // notifySlack.deploymentFailure(e.message)
    throw e
  }
}
